@model Movies.Web.Models.Movies.SearchResult
@{
    ViewData["Title"] = $"Search results for '{Model.SearchString}' {(!string.IsNullOrWhiteSpace(Model.SearchYear) ? " by year '" + Model.SearchYear + "'" : "")} ({Model.totalResults + " results found"})";    
}

<h2>@ViewData["Title"]</h2>
<div>
    <ul class="pagination">
        <li class="page-item @(!Model.ShowFirst? "disabled":"")">
            <a href="@Url.Action("MovieResult", "Movies", new { s = Model.SearchString, y = Model.SearchYear, page = "1" })" class="page-link"><i class="fas fa-fast-backward"></i></a>
        </li>

        <li class="page-item @(!Model.ShowPrevious? "disabled":"")">
            <a href="@Url.Action("MovieResult", "Movies", new { s = Model.SearchString, y = Model.SearchYear, page = Model.CurrentPage - 1 })" class="page-link"><i class="fas fa-step-backward"></i></a>
        </li>
        <li class="page-item  @(!Model.ShowNext? "disabled":"")">
            <a href="@Url.Action("MovieResult", "Movies", new { s = Model.SearchString, y = Model.SearchYear, page = Model.CurrentPage + 1 })" class="page-link"><i class="fas fa-step-forward"></i></a>
        </li>

        <li class="page-item  @(!Model.ShowLast? "disabled":"")">
            <a href="@Url.Action("MovieResult", "Movies", new { s = Model.SearchString, y = Model.SearchYear, page = Model.TotalPages })" class="page-link"><i class="fas fa-fast-forward"></i></a>
        </li>
    </ul>
    <h3>Page @Model.CurrentPage</h3>
</div>

<div>
    @{
        if (Model?.Response == true)
        {
            int nCardsPerRow = 5;
            int nTotalCount = Model.Search.Count;
            int nRowCount = (nTotalCount <= nCardsPerRow) ? nTotalCount : (int)Math.Floor((decimal)(nTotalCount / nCardsPerRow));

            for (int nRowCounter = 0; nRowCounter < nRowCount; nRowCounter++)
            {
                int iStartRowIndex = (nRowCounter * nCardsPerRow);

                int iLastRowIndex = nTotalCount;
                if (iLastRowIndex > ((nRowCounter + 1) * nCardsPerRow))
                {
                    iLastRowIndex = ((nRowCounter + 1) * nCardsPerRow);
                }

                <div class="row">
                    <div class="card-deck">
                        @for (int iRowIndex = iStartRowIndex; iRowIndex < iLastRowIndex; iRowIndex++)
                        {
                            var movie = Model.Search[iRowIndex];
                            <div class="col">
                                <div class="card">
                                    <img class="card-img-top img-fluid" src=@movie.Poster alt="Movie" style="width: 100%; height: 100%; min-width: 100%; min-height: 100%">
                                    <div class="card-body px-1">
                                        <div class="card-title "><strong>@movie.Title (@movie.Year)</strong></div>
                                    </div>
                                    <div>
                                        <a href="@Url.Action("Details", "Movies", new { i = @movie.imdbID })" class="btn btn-primary btn-block"><i class="fa fa-eye"></i> View Details</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row">
                <div class="col">
                    <p><strong>@Model.Error</strong></p>
                </div>
            </div>
        }
    }
</div>


@section JSONLD
{
    @{
        if (Model?.summaryJSONLD != null)
        {
            <script type="application/ld+json">
                @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.summaryJSONLD, Newtonsoft.Json.Formatting.Indented))
            </script>
        }
    }
}